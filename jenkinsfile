pipeline {
    agent any
    triggers {
          githubPush()
    }
    environment {
        DOCKER_IMAGE_NAME = 'calculator'
        GITHUB_REPO_URL = 'https://github.com/Aaradhyaghota/Spe_mini_Calculator.git'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the code from the GitHub repository
                    git branch: 'master', url: "${GITHUB_REPO_URL}"
                }
            }
        }

        stage('Build & test') {
            steps {
                sh 'mvn clean install'
                sh 'mvn test'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    docker.build("${DOCKER_IMAGE_NAME}", '.')
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    // Authenticate with Docker Hub using Jenkins credentials
                    docker.withRegistry('', 'dockerhub-credentials') {  // Use the credentials ID from Jenkins
                        // Tag the Docker image with your Docker Hub repository name
                        sh 'docker tag calculator aaradhyaghota/calculator:latest'
                        // Push the image to Docker Hub
                        sh 'docker push aaradhyaghota/calculator:latest'
                    }
                }
            }
        }

        stage('Run Ansible Playbook') {
                    steps {
                        script {
                            withEnv(["ANSIBLE_HOST_KEY_CHECKING=False"]) {
                                ansiblePlaybook(
                                    playbook: 'deploy.yml',   // This is the path to the playbook
                                    inventory: 'inventory1'    // This is the path to the inventory file
                                )
                            }
                        }
                    }
                }

    }
}
